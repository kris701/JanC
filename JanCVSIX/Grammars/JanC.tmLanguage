<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>fileTypes</key>
    <array>
      <string>janc</string>
      <string>jc</string>
    </array>

    <key>name</key>
    <string>JanC</string>

    <key>foldingStartMarker</key>
    <string>\{\s*$</string>

    <key>foldingStopMarker</key>
    <string>\s*\}</string>

    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#constants-and-special-vars</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#functions</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#keywords</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#strings</string>
      </dict>
    </array>

    <key>repository</key>
    <dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dart</string>
              </dict>
            </dict>
            <key>match</key>
            <string>/\*\*/</string>
            <key>name</key>
            <string>comment.block.empty.dart</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comments-inline</string>
          </dict>
        </array>
      </dict>
      <key>comments-inline</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.dart</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>text.dart-doccomments</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(///)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>marker.dart</string>
              </dict>
            </dict>
            <key>end</key>
            <string>$</string>
            <key>name</key>
            <string>comment.line.triple-slash.dart</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>text.dart-doccomments</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>marker.dart</string>
              </dict>
            </dict>
            <key>end</key>
            <string>$</string>
            <key>name</key>
            <string>comment.line.double-slash.dart</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>text.dart-doccomments</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>

      <key>functions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>^\s*(?:\b(void|int|str)\b)\s+(\w+)(?=\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.primitive.JanC</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>function.name.JanC</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>A function with a primitive return type.</string>
            <key>end</key>
            <string>\)</string>
            <key>name</key>
            <string>meta.declaration.function.JanC</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#functions-params</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>

      <key>functions-params</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#constants-and-special-vars</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?:\b(void|int|str)\b)\s+(\w+)(?=\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.primitive.JanC</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>function.name.JanC</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>A function with a primitive return type.</string>
            <key>end</key>
            <string>\)</string>
            <key>name</key>
            <string>meta.parameter.function.JanC</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-params</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\w+)(?=\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>function.name.JanC</string>
              </dict>
            </dict>
            <key>comment</key>
            <string>A function with no return type.</string>
            <key>end</key>
            <string>\)</string>
            <key>name</key>
            <string>meta.parameter.function.JanC</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-params</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#strings</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>

      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(else|for|if|return|while|switch)\b</string>
            <key>name</key>
            <string>keyword.control.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(on|every|once|idle)\b</string>
            <key>name</key>
            <string>keyword.Tasks.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(critical)\b</string>
            <key>name</key>
            <string>keyword.Critical.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(struct)\b</string>
            <key>name</key>
            <string>keyword.UserTypes.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(ref|array)\b</string>
            <key>name</key>
            <string>keyword.BracketTypes.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(&lt;&lt;|&gt;&gt;&gt;?|~|\^|\||&amp;)</string>
            <key>name</key>
            <string>keyword.operator.bitwise.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>((&amp;|\^|\||&lt;&lt;|&gt;&gt;&gt;?)=)</string>
            <key>name</key>
            <string>keyword.operator.assignment.bitwise.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(===?|!==?|&lt;=?|&gt;=?)</string>
            <key>name</key>
            <string>keyword.operator.comparison.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(([+*/%-]|\~)=)</string>
            <key>name</key>
            <string>keyword.operator.assignment.arithmetic.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(=)</string>
            <key>name</key>
            <string>keyword.operator.assignment.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\-\-|\+\+)</string>
            <key>name</key>
            <string>keyword.operator.increment-decrement.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(\-|\+|\*|\/|\~\/|%)</string>
            <key>name</key>
            <string>keyword.operator.arithmetic.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(!|&amp;&amp;|\|\|)</string>
            <key>name</key>
            <string>keyword.operator.logical.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(?:void|int|str|float|bool)\b</string>
            <key>name</key>
            <string>storage.type.primitive.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(?:digitalWrite|digitalRead|analogWrite|analogRead|sleep)\b</string>
            <key>name</key>
            <string>keyword.BuildInFunction.JanC</string>
          </dict>
        </array>
      </dict>

      <key>constants-and-special-vars</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(true|false|null)\b</string>
            <key>name</key>
            <string>constant.language.JanC</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
            <key>name</key>
            <string>constant.numeric.JanC</string>
          </dict>
        </array>
      </dict>

      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.quoted.double.JanC</string>
            <key>begin</key>
            <string>"</string>
            <key>end</key>
            <string>"</string>

            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.character.escape.JanC</string>
                <key>match</key>
                <string>\\.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>

    <key>scopeName</key>
    <string>source.JanC</string>
    <key>uuid</key>
    <string>341b5840-c89c-4c29-9ca1-db4a58562ddc</string>

  </dict>
</plist>